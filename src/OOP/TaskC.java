package OOP;

public class TaskC {

    /*

    Задача C. Ответьте на вопросы

· 1. Что такое ООП?

Объектно-ориентированное программирование (ООП) - это парадигма программирования, основанная на понятии "объекты", которые могут содержать данные и код: данные в виде полей (свойства) и код в виде процедур/методов.

 · 2. Что такое класс?

Класс есть ключевое понятие в объектно-ориентированном программировании, под которое и заточена Java. Класс описывает
содержание и поведение некой совокупности данных и действий над
этими данными.

· 3. Что такое свойства и методы класса?

Свойства класса (они же поля или атрибуты) - это характеристики объекта класса.

Методы класса - это функции, с помощью которых можно оперировать данными класса.

· 4. Что такое экземпляр и состояние объекта?

Объект - это экземпляр класса - это конкретная "вещь", которую вы сделали, используя определенный класс. Итак, "объект" и "экземпляр" - это одно и то же, но слово "экземпляр" указывает на отношение объекта к его классу.

· 5. Назовите принципы ООП и расскажите о каждом немного.

Объектно-ориентированное программирование (ООП) — это парадигма программирования, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определенного класса, а классы образуют иерархию наследования.

Основные принципы ООП: абстракция, инкапсуляция, наследование, полиморфизм.

Абстракция —  означает выделение значимой информации и исключение из рассмотрения незначимой. С точки зрения программирования это правильное разделение программы на объекты. Абстракция позволяет отобрать главные характеристики и опустить второстепенные.

Инкапсуляция — свойство системы, позволяющее объединить данные и методы, работающие с ними, в классе. Другими словами это «сокрытие реализации». Наследование — свойство системы, позволяющее описать новый класс на основе уже существующего с частично или полностью заимствующейся функциональностью. Класс, от которого производится наследование, называется базовым, родительским или суперклассом. Новый класс — потомком, наследником, дочерним или производным классом.

Полиморфизм — свойство системы использовать объекты с одинаковым интерфейсом без информации о типе и внутренней структуре объекта.

     */
}
